{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "title": "Backend interview",
      "license": {
        "name": "MIT"
      }
    },
    "servers": [
     
      {
       "url": "localhost:5000/users"
      },
      {
           "url":"localhost:5000/users/private"
      },
      {
           "url":"localhost:5000/users/public"
      },
      {
          "url": "localhost:5000/users/likes"
      },
      {
          "url": "localhost:5000/users/followers"
      }
  
    ],
    "paths": {
      "/user": {
        "get": {
          "summary": "Details about a user",
          "operationId": "listUser",
          "tags": [
            "user"
          ],
        
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "ID of the user",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Details about a user",
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
  
  
  
      "/public":{
              "get":{
                  "summary": "Users public",
                  "operationId":"listPublicUser",
                  "tags":[
                      "public"
                  ],
                  "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "ID of the public user",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Details public",
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
  
          
    "/private":{
              "get":{
                  "summary": "Users public",
                  "operationId":"listPrivateUser",
                  "tags":[
                      "private"
                  ],
                  "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "ID of the private user",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Details about a user",
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
    },
  
          "/followers":{
              "get":{
                  "summary": "Users foolwers",
                  "operationId":"listPublicUser",
                  "tags":[
                      "followers"
                  ],
                  "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "ID of the user followers",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "followers details",
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User/followers"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
        },
    
          "/likes":{
              "get":{
                  "summary": "Users likes",
                  "operationId":"listPublicUser",
                  "tags":[
                      "likes"
                  ],
                  "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "ID of the user likes",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Details about a user",
              "headers": {
                "x-next": {
                  "description": "A link to the next page of responses",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "default": {
              "description": "unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
       }
    },
      "components": {
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          }
        },
        "Error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "securitySchemes": {
        "BasicAuth": {
          "type": "http",
          "scheme": "basic"
        }
      }
    
          },
            "security": [
      {
        "BasicAuth": []
      }
    ]
    }